import { Write } from "../../../utils/file.js";
import { Nextjs } from "../index.js";


export class NextUI extends Nextjs {
    constructor (
        name: string,
        packageManager: string,
        typescript: boolean,
        router: boolean,
        alias: string,
        eslint: boolean,
        srcDir: boolean,
    ) {
        super(name, packageManager, typescript, router, alias, eslint, srcDir);
        this.dependencies = this.dependencies.concat(["@nextui-org/react", "framer-motion"]);
    }

    async Create() {
        await this.CreateNextjs();
        await this.InstallDependencies();

        this.WriteTailwindConfig();
        this.WriteLayout();
    }

    WriteTailwindConfig() {
        const data = `import { nextui } from "@nextui-org/react";

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    // ...
    // make sure it's pointing to the ROOT node_module
    "./node_modules/@nextui-org/theme/dist/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  darkMode: "class",
  plugins: [nextui()],
};`

        Write(`./tailwind.config.${this.typescript ? "ts" : "js"}`, data);
    }


    WriteLayout() {
        const data = `import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import {NextUIProvider} from "@nextui-org/react";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
      <html lang="en">
        <NextUIProvider>
              <body className={inter.className}>{children}</body>
        </NextUIProvider>
    </html>
  );
}
`
        const path: string = this.srcDir ? "./src/app/layout.tsx" : "./app/layout.tsx";
        Write(path, data);
    }
};
